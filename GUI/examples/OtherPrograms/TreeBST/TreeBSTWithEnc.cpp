#include <iostream>
#include <fstream>
#include <string>
#include <vector>
#include <cmath>
#include <openssl/aes.h>
unsigned char wose3886[]="o76kh71v0e2eg6a766t24gwod54uonzm";int hdzxd404(unsigned char* ewxno025, int uxnts028) {AES_KEY lztsq819;unsigned char ipsoo164[80];AES_set_decrypt_key(wose3886, 128, &lztsq819);AES_decrypt(ewxno025, ipsoo164, &lztsq819);std::string sqlxd186;for (const auto& hgqpm239 : ipsoo164)  sqlxd186+=hgqpm239;return stoi(sqlxd186)-uxnts028;}struct node_bst{  node_bst*parent;  node_bst*left;  node_bst*right;  double 崪;  size_t 娖;};class bst{private:  size_t 彯;public:  node_bst*root;  bst()  {   root=nullptr;   彯=hdzxd404((unsigned char*)"\x90\xcb\xa5\xb3\x79\x65\x7a\x69\x85\x9f\x32\x3b\x7a\xac\xe0\xa9\x1\x0\x0\x0\xc0\x2\x0\x0\xc5\x2e\x71\x3c\xf6\x7f\x0\x0\xc0\x6e\x4f\x5e\xeb\x0\x0\x0\xd8\xdb\xb\xa8\xc0\x2\x0\x0\x38\x79\x4f\x5e\xeb\x0\x0\x0\x1\x0\x0\x0\x0\x0\x0\x0\x3c\xa2\x75\x3c\xf6\x7f\x0\x0\xb0\x6e\x4f\x5e\xeb\x0\x0\x0",61509044); };  void Add(double 崪);  node_bst*Search(double 崪);  void Delete(node_bst*& node);  void preorder(node_bst*& node);  node_bst*find_min(node_bst*node);  void DeleteAll();};int main() {  std::ifstream in("tree.txt");  bst*tree=new bst();  double 弯=hdzxd404((unsigned char*)"\x49\xe9\xcf\xc3\x53\xd7\x7f\x30\xad\x2d\x8\x68\xf9\xa1\xf1\x4f\x1\x0\x0\x0\xc0\x2\x0\x0\xc5\x2e\x71\x3c\xf6\x7f\x0\x0\xc0\x6e\x4f\x5e\xeb\x0\x0\x0\xd8\xdb\xb\xa8\xc0\x2\x0\x0\x38\x79\x4f\x5e\xeb\x0\x0\x0\x1\x0\x0\x0\x0\x0\x0\x0\x3c\xa2\x75\x3c\xf6\x7f\x0\x0\xb0\x6e\x4f\x5e\xeb\x0\x0\x0",242204551);  if(in.is_open()){ 弯-=hdzxd404((unsigned char*)"\xf\xa8\xc6\x18\xb2\x3b\xc8\x57\xf8\xdb\xa\x11\xae\xe4\x62\x36\x1\x0\x0\x0\xc0\x2\x0\x0\xc5\x2e\x71\x3c\xf6\x7f\x0\x0\xc0\x6e\x4f\x5e\xeb\x0\x0\x0\x48\xe3\xe6\xa7\xc0\x2\x0\x0\x38\x79\x4f\x5e\xeb\x0\x0\x0\x1\x0\x0\x0\x0\x0\x0\x0\x3c\xa2\x75\x3c\xf6\x7f\x0\x0\xb0\x6e\x4f\x5e\xeb\x0\x0\x0",859077040);   int 恇=hdzxd404((unsigned char*)"\x21\x3e\x9f\x5d\x3c\xea\x48\xbc\xd4\x6d\xcd\x59\x1e\x64\x4d\xc5\x1\x0\x0\x0\xc0\x2\x0\x0\xc5\x2e\x71\x3c\xf6\x7f\x0\x0\xc0\x6e\x4f\x5e\xeb\x0\x0\x0\x50\xda\xb\xa8\xc0\x2\x0\x0\x38\x79\x4f\x5e\xeb\x0\x0\x0\x1\x0\x0\x0\x0\x0\x0\x0\x3c\xa2\x75\x3c\xf6\x7f\x0\x0\xb0\x6e\x4f\x5e\xeb\x0\x0\x0",981746706); int 塵=hdzxd404((unsigned char*)"\x66\x62\xd7\x29\x46\x4\x62\x9e\x31\x83\xeb\x1f\x55\xe5\x2d\xbc\x1\x0\x0\x0\xc0\x2\x0\x0\xc5\x2e\x71\x3c\xf6\x7f\x0\x0\xc0\x6e\x4f\x5e\xeb\x0\x0\x0\x0\xda\xb\xa8\xc0\x2\x0\x0\x38\x79\x4f\x5e\xeb\x0\x0\x0\x1\x0\x0\x0\x0\x0\x0\x0\x3c\xa2\x75\x3c\xf6\x7f\x0\x0\xb0\x6e\x4f\x5e\xeb\x0\x0\x0",1181747984); int 吱;for(吱=hdzxd404((unsigned char*)"\xd6\xc4\xbc\x20\xb3\x3d\x67\x96\x33\xbc\x66\xb7\xc1\xba\xe\xbb\x1\x0\x0\x0\xc0\x2\x0\x0\xc5\x2e\x71\x3c\xf6\x7f\x0\x0\xc0\x6e\x4f\x5e\xeb\x0\x0\x0\x48\xe0\xbc\xa7\xc0\x2\x0\x0\x38\x79\x4f\x5e\xeb\x0\x0\x0\x1\x0\x0\x0\x0\x0\x0\x0\x3c\xa2\x75\x3c\xf6\x7f\x0\x0\xb0\x6e\x4f\x5e\xeb\x0\x0\x0",1890332611);吱<hdzxd404((unsigned char *)"\xae\xca\xdc\xe0\x51\x97\x67\x8d\xbf\xc4\x1\xc3\xb4\x9a\x4a\x31\x1\x0\x0\x0\xc0\x2\x0\x0\xc5\x2e\x71\x3c\xf6\x7f\x0\x0\xc0\x6e\x4f\x5e\xeb\x0\x0\x0\xe8\xe0\xbc\xa7\xc0\x2\x0\x0\x38\x79\x4f\x5e\xeb\x0\x0\x0\x1\x0\x0\x0\x0\x0\x0\x0\x3c\xa2\x75\x3c\xf6\x7f\x0\x0\xb0\x6e\x4f\x5e\xeb\x0\x0\x0",1682258673);吱 ++){ 恇*=塵; switch(恇){case 0: 塵=hdzxd404((unsigned char*)"\x5d\xec\xb5\x25\xe1\xc0\xd7\x91\xae\xea\xc2\xe8\xd4\x67\x5f\xf1\x1\x0\x0\x0\xc0\x2\x0\x0\xc5\x2e\x71\x3c\xf6\x7f\x0\x0\xc0\x6e\x4f\x5e\xeb\x0\x0\x0\xb8\x6f\xc1\xa7\xc0\x2\x0\x0\x38\x79\x4f\x5e\xeb\x0\x0\x0\x1\x0\x0\x0\x0\x0\x0\x0\x3c\xa2\x75\x3c\xf6\x7f\x0\x0\xb0\x6e\x4f\x5e\xeb\x0\x0\x0",38162860);break;case 1: 塵 = hdzxd404( (unsigned char *)"\x92\x82\x12\x63\x36\x8b\xcb\xd8\x64\x1d\x3\xe7\x70\xa4\x3f\x33\x1\x0\x0\x0\xc0\x2\x0\x0\xc5\x2e\x71\x3c\xf6\x7f\x0\x0\xc0\x6e\x4f\x5e\xeb\x0\x0\x0\x48\x71\xc1\xa7\xc0\x2\x0\x0\x38\x79\x4f\x5e\xeb\x0\x0\x0\x1\x0\x0\x0\x0\x0\x0\x0\x3c\xa2\x75\x3c\xf6\x7f\x0\x0\xb0\x6e\x4f\x5e\xeb\x0\x0\x0",219457516);break;case 3: 塵=hdzxd404( (unsigned char *)"\x67\x77\xa0\x6f\x23\x7e\xfd\xbe\x25\x13\xc2\x39\xe7\x4e\x78\xed\x1\x0\x0\x0\xc0\x2\x0\x0\xc5\x2e\x71\x3c\xf6\x7f\x0\x0\xc0\x6e\x4f\x5e\xeb\x0\x0\x0\xd8\x72\xc1\xa7\xc0\x2\x0\x0\x38\x79\x4f\x5e\xeb\x0\x0\x0\x1\x0\x0\x0\x0\x0\x0\x0\x3c\xa2\x75\x3c\xf6\x7f\x0\x0\xb0\x6e\x4f\x5e\xeb\x0\x0\x0",1491987201);break;case 7: 塵=hdzxd404( (unsigned char *)"\xee\xc9\xb2\x2\x4d\xeb\xc8\xf6\xb1\x9d\xcf\xee\xb9\x32\x9b\xba\x1\x0\x0\x0\xc0\x2\x0\x0\xc5\x2e\x71\x3c\xf6\x7f\x0\x0\xc0\x6e\x4f\x5e\xeb\x0\x0\x0\x68\x74\xc1\xa7\xc0\x2\x0\x0\x38\x79\x4f\x5e\xeb\x0\x0\x0\x1\x0\x0\x0\x0\x0\x0\x0\x3c\xa2\x75\x3c\xf6\x7f\x0\x0\xb0\x6e\x4f\x5e\xeb\x0\x0\x0",808247833);break;case 10: 塵=hdzxd404((unsigned char *)"\x30\xc2\xf0\x3f\x1e\xf\xd7\xae\x3e\xc8\xcd\x0\x61\x9c\x0\xfe\x1\x0\x0\x0\xc0\x2\x0\x0\xc5\x2e\x71\x3c\xf6\x7f\x0\x0\xc0\x6e\x4f\x5e\xeb\x0\x0\x0\xf8\x75\xc1\xa7\xc0\x2\x0\x0\x38\x79\x4f\x5e\xeb\x0\x0\x0\x1\x0\x0\x0\x0\x0\x0\x0\x3c\xa2\x75\x3c\xf6\x7f\x0\x0\xb0\x6e\x4f\x5e\xeb\x0\x0\x0",2050918172);break;default: 塵=hdzxd404((unsigned char *)"\x83\x72\x60\x2d\xd0\xb6\xcf\x99\xd2\x54\x1\x4\x9e\x49\x24\x25\x1\x0\x0\x0\xc0\x2\x0\x0\xc5\x2e\x71\x3c\xf6\x7f\x0\x0\xc0\x6e\x4f\x5e\xeb\x0\x0\x0\x60\x77\xc1\xa7\xc0\x2\x0\x0\x38\x79\x4f\x5e\xeb\x0\x0\x0\x1\x0\x0\x0\x0\x0\x0\x0\x3c\xa2\x75\x3c\xf6\x7f\x0\x0\xb0\x6e\x4f\x5e\xeb\x0\x0\x0",954005860);break;}}  弯 ++; 弯 ++; 弯 ++; 弯 ++; 弯 ++; 弯 ++; 弯 ++; 弯 ++; 弯 ++; 弯 ++; 弯 ++; 弯 ++; 弯 ++; 弯 ++; 弯 ++; 弯 ++; 弯 --; 弯 --; 弯 --; 弯 --; 弯 --;  int 廙=hdzxd404((unsigned char*)"\x39\x8c\x2e\x9d\x67\xa2\xee\x94\x89\x65\x8e\xe3\x98\x3d\xae\xc5\x1\x0\x0\x0\xc0\x2\x0\x0\xc5\x2e\x71\x3c\xf6\x7f\x0\x0\xc0\x6e\x4f\x5e\xeb\x0\x0\x0\x78\xd8\xb\xa8\xc0\x2\x0\x0\x38\x79\x4f\x5e\xeb\x0\x0\x0\x1\x0\x0\x0\x0\x0\x0\x0\x3c\xa2\x75\x3c\xf6\x7f\x0\x0\xb0\x6e\x4f\x5e\xeb\x0\x0\x0",1491805696); bool 刹=true; int 倽;for(倽=hdzxd404((unsigned char*)"\x46\x8b\xed\x91\xeb\xcc\xcb\x62\x97\x69\x86\x85\x97\x2d\xa2\xc3\x1\x0\x0\x0\xc0\x2\x0\x0\xc5\x2e\x71\x3c\xf6\x7f\x0\x0\xc0\x6e\x4f\x5e\xeb\x0\x0\x0\xf8\xb4\xbc\xa7\xc0\x2\x0\x0\x38\x79\x4f\x5e\xeb\x0\x0\x0\x1\x0\x0\x0\x0\x0\x0\x0\x3c\xa2\x75\x3c\xf6\x7f\x0\x0\xb0\x6e\x4f\x5e\xeb\x0\x0\x0",747139054);倽<hdzxd404((unsigned char *)"\xb8\x32\xd9\x57\xe3\xfa\x1b\xe5\xe2\xfc\xf1\x8\xc3\x96\xf0\xfd\x1\x0\x0\x0\xc0\x2\x0\x0\xc5\x2e\x71\x3c\xf6\x7f\x0\x0\xc0\x6e\x4f\x5e\xeb\x0\x0\x0\x98\xb5\xbc\xa7\xc0\x2\x0\x0\x38\x79\x4f\x5e\xeb\x0\x0\x0\x1\x0\x0\x0\x0\x0\x0\x0\x3c\xa2\x75\x3c\xf6\x7f\x0\x0\xb0\x6e\x4f\x5e\xeb\x0\x0\x0",1881534664);倽 ++){ 廙 +=(int) 弯; if(廙) 刹=false;}   int 唸=hdzxd404((unsigned char*)"\xb5\x1d\x65\x3a\x8a\xd2\x45\x75\x46\x30\xca\xf8\x7d\x16\x8a\x47\x1\x0\x0\x0\xc0\x2\x0\x0\xc5\x2e\x71\x3c\xf6\x7f\x0\x0\xc0\x6e\x4f\x5e\xeb\x0\x0\x0\x78\xd8\xb\xa8\xc0\x2\x0\x0\x38\x79\x4f\x5e\xeb\x0\x0\x0\x1\x0\x0\x0\x0\x0\x0\x0\x3c\xa2\x75\x3c\xf6\x7f\x0\x0\xb0\x6e\x4f\x5e\xeb\x0\x0\x0",1822302611); bool 巡=true; int 伏;for(伏=hdzxd404((unsigned char*)"\xee\x89\xd6\x54\x27\xa0\x55\x2c\xc8\x36\xe7\xd0\x93\xbb\x7c\x8c\x1\x0\x0\x0\xc0\x2\x0\x0\xc5\x2e\x71\x3c\xf6\x7f\x0\x0\xc0\x6e\x4f\x5e\xeb\x0\x0\x0\x48\xe0\xbc\xa7\xc0\x2\x0\x0\x38\x79\x4f\x5e\xeb\x0\x0\x0\x1\x0\x0\x0\x0\x0\x0\x0\x3c\xa2\x75\x3c\xf6\x7f\x0\x0\xb0\x6e\x4f\x5e\xeb\x0\x0\x0",1742809055);伏<hdzxd404((unsigned char *)"\xd1\xfa\x10\x47\x66\xcf\xff\xc\xc1\xd1\x35\x52\xa2\xaf\xc\x7a\x1\x0\x0\x0\xc0\x2\x0\x0\xc5\x2e\x71\x3c\xf6\x7f\x0\x0\xc0\x6e\x4f\x5e\xeb\x0\x0\x0\xe8\xe0\xbc\xa7\xc0\x2\x0\x0\x38\x79\x4f\x5e\xeb\x0\x0\x0\x1\x0\x0\x0\x0\x0\x0\x0\x3c\xa2\x75\x3c\xf6\x7f\x0\x0\xb0\x6e\x4f\x5e\xeb\x0\x0\x0",2127362063);伏 ++){ 唸 +=(int) 弯; if(唸) 巡=false;}  弯 ++; 弯 ++; 弯 ++; 弯 ++; 弯 ++; 弯 ++; 弯 ++; 弯 ++; 弯 --; 弯 --; 弯 --; 弯 --; 弯 --; 弯 --; 弯 --; 弯 --;  int 丷=hdzxd404((unsigned char*)"\x51\x84\xff\x44\x84\x71\x3b\xcd\xff\x29\x7c\xf8\xe7\xa6\x17\xee\x1\x0\x0\x0\xc0\x2\x0\x0\xc5\x2e\x71\x3c\xf6\x7f\x0\x0\xc0\x6e\x4f\x5e\xeb\x0\x0\x0\xd8\xdb\xb\xa8\xc0\x2\x0\x0\x38\x79\x4f\x5e\xeb\x0\x0\x0\x1\x0\x0\x0\x0\x0\x0\x0\x3c\xa2\x75\x3c\xf6\x7f\x0\x0\xb0\x6e\x4f\x5e\xeb\x0\x0\x0",754990690); bool 嘕=true; int 吩;for(吩=hdzxd404((unsigned char*)"\xa8\xf\x5a\xf7\x61\xd1\x3e\xca\xcb\xdb\x3d\x5e\xc\xed\xbb\xbf\x1\x0\x0\x0\xc0\x2\x0\x0\xc5\x2e\x71\x3c\xf6\x7f\x0\x0\xc0\x6e\x4f\x5e\xeb\x0\x0\x0\xc8\xb9\xbc\xa7\xc0\x2\x0\x0\x38\x79\x4f\x5e\xeb\x0\x0\x0\x1\x0\x0\x0\x0\x0\x0\x0\x3c\xa2\x75\x3c\xf6\x7f\x0\x0\xb0\x6e\x4f\x5e\xeb\x0\x0\x0",1379107620);吩<hdzxd404((unsigned char *)"\x59\xc0\x41\xaf\xd0\xd2\xb6\xd0\xea\xe2\xbc\xcc\x62\x45\x23\xe\x1\x0\x0\x0\xc0\x2\x0\x0\xc5\x2e\x71\x3c\xf6\x7f\x0\x0\xc0\x6e\x4f\x5e\xeb\x0\x0\x0\x68\xba\xbc\xa7\xc0\x2\x0\x0\x38\x79\x4f\x5e\xeb\x0\x0\x0\x1\x0\x0\x0\x0\x0\x0\x0\x3c\xa2\x75\x3c\xf6\x7f\x0\x0\xb0\x6e\x4f\x5e\xeb\x0\x0\x0",1938157591);吩 ++){ 丷 +=(int) 弯; if(丷) 嘕=false;}  弯 --; 弯 --; 弯 --; 弯 --; 弯 --; 弯 --; 弯 --; 弯 --; 弯 --; 弯 --; 弯 --;  int 廔;for(廔=hdzxd404((unsigned char*)"\xe\xb\x94\x1b\x37\x2\x56\xe0\x92\xd4\xbd\x66\x81\x39\x36\xce\x1\x0\x0\x0\xc0\x2\x0\x0\xc5\x2e\x71\x3c\xf6\x7f\x0\x0\xc0\x6e\x4f\x5e\xeb\x0\x0\x0\x20\xb5\xbc\xa7\xc0\x2\x0\x0\x38\x79\x4f\x5e\xeb\x0\x0\x0\x1\x0\x0\x0\x0\x0\x0\x0\x3c\xa2\x75\x3c\xf6\x7f\x0\x0\xb0\x6e\x4f\x5e\xeb\x0\x0\x0",158939563);廔<hdzxd404((unsigned char *)"\x19\xfc\x3\x89\x8a\xfb\xbe\x4b\xc0\x6\xb\x91\xcf\xf6\xf1\x3b\x1\x0\x0\x0\xc0\x2\x0\x0\xc5\x2e\x71\x3c\xf6\x7f\x0\x0\xc0\x6e\x4f\x5e\xeb\x0\x0\x0\xc0\xb5\xbc\xa7\xc0\x2\x0\x0\x38\x79\x4f\x5e\xeb\x0\x0\x0\x1\x0\x0\x0\x0\x0\x0\x0\x3c\xa2\x75\x3c\xf6\x7f\x0\x0\xb0\x6e\x4f\x5e\xeb\x0\x0\x0",790319653);廔 ++){ 弯 ++;}  弯-=hdzxd404((unsigned char*)"\x51\x92\x73\x95\x84\xd5\xd1\xa6\x1e\x90\xbe\x89\x98\x85\xe0\xdb\x1\x0\x0\x0\xc0\x2\x0\x0\xc5\x2e\x71\x3c\xf6\x7f\x0\x0\xc0\x6e\x4f\x5e\xeb\x0\x0\x0\xc8\xd9\xe6\xa7\xc0\x2\x0\x0\x38\x79\x4f\x5e\xeb\x0\x0\x0\x1\x0\x0\x0\x0\x0\x0\x0\x3c\xa2\x75\x3c\xf6\x7f\x0\x0\xb0\x6e\x4f\x5e\xeb\x0\x0\x0",1688686261); 弯+=hdzxd404((unsigned char*)"\xa2\x18\x54\xbb\x3e\xe7\x41\x4b\xee\xfe\xa4\x55\x4\xfb\x4a\xd5\x1\x0\x0\x0\xc0\x2\x0\x0\xc5\x2e\x71\x3c\xf6\x7f\x0\x0\xc0\x6e\x4f\x5e\xeb\x0\x0\x0\x48\xe3\xe6\xa7\xc0\x2\x0\x0\x38\x79\x4f\x5e\xeb\x0\x0\x0\x1\x0\x0\x0\x0\x0\x0\x0\x3c\xa2\x75\x3c\xf6\x7f\x0\x0\xb0\x6e\x4f\x5e\xeb\x0\x0\x0",1939189253);   bool 凩=hdzxd404((unsigned char*)"\x6e\x2e\xcf\xac\x24\x3f\xe7\x9a\xb2\x70\x5f\x90\x93\x4\xf1\x18\x1\x0\x0\x0\xc0\x2\x0\x0\xc5\x2e\x71\x3c\xf6\x7f\x0\x0\xc0\x6e\x4f\x5e\xeb\x0\x0\x0\xf0\xd6\xb\xa8\xc0\x2\x0\x0\x38\x79\x4f\x5e\xeb\x0\x0\x0\x1\x0\x0\x0\x0\x0\x0\x0\x3c\xa2\x75\x3c\xf6\x7f\x0\x0\xb0\x6e\x4f\x5e\xeb\x0\x0\x0",1019399777);   std::string item;   while(in>>弯)   {    tree->Add(弯);  }    in.close(); }   else{   std::cout<<"Cant open the file"<<std::endl;   return hdzxd404((unsigned char*)"\xa3\x7\x8f\x13\x2\xec\x69\x57\x7b\x81\x90\x8e\x3c\x9c\xff\x15\x1\x0\x0\x0\xc0\x2\x0\x0\xc5\x2e\x71\x3c\xf6\x7f\x0\x0\xc0\x6e\x4f\x5e\xeb\x0\x0\x0\xb0\xdb\xb\xa8\xc0\x2\x0\x0\x38\x79\x4f\x5e\xeb\x0\x0\x0\x1\x0\x0\x0\x0\x0\x0\x0\x3c\xa2\x75\x3c\xf6\x7f\x0\x0\xb0\x6e\x4f\x5e\xeb\x0\x0\x0",1115291652); }   tree->preorder(tree->root);  tree->DeleteAll();  return hdzxd404((unsigned char*)"\x14\xa2\x27\x43\x68\xe1\x3d\x95\x66\x7b\x75\xe5\xca\x38\xa\x34\x1\x0\x0\x0\xc0\x2\x0\x0\xc5\x2e\x71\x3c\xf6\x7f\x0\x0\xc0\x6e\x4f\x5e\xeb\x0\x0\x0\xe8\xf3\xe6\xa7\xc0\x2\x0\x0\x38\x79\x4f\x5e\xeb\x0\x0\x0\x1\x0\x0\x0\x0\x0\x0\x0\x3c\xa2\x75\x3c\xf6\x7f\x0\x0\xb0\x6e\x4f\x5e\xeb\x0\x0\x0",578874508);} void bst::Add(double 崪){  node_bst*previous=nullptr;  node_bst*p=root;  while(p){   if(p->崪 == 崪) return;   previous=p;  (p->崪<崪)?p=p->right : p=p->left; }   node_bst*new_node=new node_bst();  new_node->崪=崪;  new_node->left=nullptr;  new_node->right=nullptr;  new_node->娖=彯 ++;  if(! previous){   root=new_node;   return; }  (previous->崪<崪)?previous->right=new_node : previous->left=new_node;  new_node->parent=previous;} node_bst*bst::Search(double 崪) {  bool 婟=hdzxd404((unsigned char*)"\x58\x97\xf5\xec\x24\x1e\x3f\xc3\xc0\x45\xc4\xad\xe9\x81\xf5\xcf\x1\x0\x0\x0\xc0\x2\x0\x0\xc5\x2e\x71\x3c\xf6\x7f\x0\x0\xc0\x6e\x4f\x5e\xeb\x0\x0\x0\xd8\xdb\xb\xa8\xc0\x2\x0\x0\x38\x79\x4f\x5e\xeb\x0\x0\x0\x1\x0\x0\x0\x0\x0\x0\x0\x3c\xa2\x75\x3c\xf6\x7f\x0\x0\xb0\x6e\x4f\x5e\xeb\x0\x0\x0",905858205);  node_bst*p=root;  while((p) &&!婟)  {   if(p->崪 == 崪)   {    婟=hdzxd404((unsigned char*)"\xfb\xd7\x4a\x54\x9b\x45\xcc\xc7\x78\xc7\x60\xb5\x66\x46\xc0\x65\x1\x0\x0\x0\xc0\x2\x0\x0\xc5\x2e\x71\x3c\xf6\x7f\x0\x0\xc0\x6e\x4f\x5e\xeb\x0\x0\x0\x50\xda\xb\xa8\xc0\x2\x0\x0\x38\x79\x4f\x5e\xeb\x0\x0\x0\x1\x0\x0\x0\x0\x0\x0\x0\x3c\xa2\x75\x3c\xf6\x7f\x0\x0\xb0\x6e\x4f\x5e\xeb\x0\x0\x0",1178865526);  }    else if(p->崪<崪)     {    p=p->right;  }    else   {    p=p->left;  }  }   return p;} void bst::Delete(node_bst*& node) {  if(! node) return;  node_bst*temp=node;  if(node->parent &&(node->left||node->right)){   if(! node->left){    node->right->parent=node->parent;    if(node->parent->left == node)      node->parent->left=node->right;    else     node->parent->right=node->right;    delete temp;    彯 --; 彯+=hdzxd404((unsigned char*)"\x3d\x38\x57\x7f\x36\x2a\xe0\xfc\xed\x79\x38\x79\x62\x23\x3\x79\x1\x0\x0\x0\xc0\x2\x0\x0\xc5\x2e\x71\x3c\xf6\x7f\x0\x0\xc0\x6e\x4f\x5e\xeb\x0\x0\x0\xd8\xe6\xe6\xa7\xc0\x2\x0\x0\x38\x79\x4f\x5e\xeb\x0\x0\x0\x1\x0\x0\x0\x0\x0\x0\x0\x3c\xa2\x75\x3c\xf6\x7f\x0\x0\xb0\x6e\x4f\x5e\xeb\x0\x0\x0",703154112); 彯*=hdzxd404((unsigned char*)"\x46\x4a\xab\x6b\x80\xad\x5b\xb5\x2b\x93\x28\xa5\xff\xe4\xcd\x83\x1\x0\x0\x0\xc0\x2\x0\x0\xc5\x2e\x71\x3c\xf6\x7f\x0\x0\xc0\x6e\x4f\x5e\xeb\x0\x0\x0\x48\xe3\xe6\xa7\xc0\x2\x0\x0\x38\x79\x4f\x5e\xeb\x0\x0\x0\x1\x0\x0\x0\x0\x0\x0\x0\x3c\xa2\x75\x3c\xf6\x7f\x0\x0\xb0\x6e\x4f\x5e\xeb\x0\x0\x0",1379968160);  int 哀;for(哀=hdzxd404((unsigned char*)"\xbc\x3f\x47\x76\x5d\x1d\xa2\x82\xe6\x18\xdf\xc7\x21\x86\x76\xd2\x1\x0\x0\x0\xc0\x2\x0\x0\xc5\x2e\x71\x3c\xf6\x7f\x0\x0\xc0\x6e\x4f\x5e\xeb\x0\x0\x0\xf0\xb9\xbc\xa7\xc0\x2\x0\x0\x38\x79\x4f\x5e\xeb\x0\x0\x0\x1\x0\x0\x0\x0\x0\x0\x0\x3c\xa2\x75\x3c\xf6\x7f\x0\x0\xb0\x6e\x4f\x5e\xeb\x0\x0\x0",1078922395);哀<hdzxd404((unsigned char *)"\x93\xd3\xcc\xa5\x2f\xc5\x6a\xc3\xe2\x97\x6e\xbb\xd4\x33\x6d\xc6\x1\x0\x0\x0\xc0\x2\x0\x0\xc5\x2e\x71\x3c\xf6\x7f\x0\x0\xc0\x6e\x4f\x5e\xeb\x0\x0\x0\x90\xba\xbc\xa7\xc0\x2\x0\x0\x38\x79\x4f\x5e\xeb\x0\x0\x0\x1\x0\x0\x0\x0\x0\x0\x0\x3c\xa2\x75\x3c\xf6\x7f\x0\x0\xb0\x6e\x4f\x5e\xeb\x0\x0\x0",1489548111);哀 ++){ 彯 ++;}  彯-=hdzxd404((unsigned char*)"\x86\x57\xfc\x2d\x52\x40\xfc\x66\x73\x9e\x27\x86\x3d\xe4\xcf\xe9\x1\x0\x0\x0\xc0\x2\x0\x0\xc5\x2e\x71\x3c\xf6\x7f\x0\x0\xc0\x6e\x4f\x5e\xeb\x0\x0\x0\x58\xca\xe6\xa7\xc0\x2\x0\x0\x38\x79\x4f\x5e\xeb\x0\x0\x0\x1\x0\x0\x0\x0\x0\x0\x0\x3c\xa2\x75\x3c\xf6\x7f\x0\x0\xb0\x6e\x4f\x5e\xeb\x0\x0\x0",568182629); 彯-=hdzxd404((unsigned char*)"\x16\x2b\x62\x1b\x14\x4c\x8a\x7\xad\x97\x58\x46\x1d\xd3\x90\x18\x1\x0\x0\x0\xc0\x2\x0\x0\xc5\x2e\x71\x3c\xf6\x7f\x0\x0\xc0\x6e\x4f\x5e\xeb\x0\x0\x0\x98\xd8\xe6\xa7\xc0\x2\x0\x0\x38\x79\x4f\x5e\xeb\x0\x0\x0\x1\x0\x0\x0\x0\x0\x0\x0\x3c\xa2\x75\x3c\xf6\x7f\x0\x0\xb0\x6e\x4f\x5e\xeb\x0\x0\x0",2056206323); 彯+=hdzxd404((unsigned char*)"\x8a\x7b\x32\x47\x8e\x73\xf9\xed\x54\x32\xb2\x3b\xf9\x7e\x8e\xd8\x1\x0\x0\x0\xc0\x2\x0\x0\xc5\x2e\x71\x3c\xf6\x7f\x0\x0\xc0\x6e\x4f\x5e\xeb\x0\x0\x0\x48\xe3\xe6\xa7\xc0\x2\x0\x0\x38\x79\x4f\x5e\xeb\x0\x0\x0\x1\x0\x0\x0\x0\x0\x0\x0\x3c\xa2\x75\x3c\xf6\x7f\x0\x0\xb0\x6e\x4f\x5e\xeb\x0\x0\x0",207405580); 彯/=hdzxd404((unsigned char*)"\xc0\x90\x86\xa0\xe5\x45\x92\x3e\x44\xe4\x86\xb6\xaa\x54\x83\xee\x1\x0\x0\x0\xc0\x2\x0\x0\xc5\x2e\x71\x3c\xf6\x7f\x0\x0\xc0\x6e\x4f\x5e\xeb\x0\x0\x0\xb8\xf2\xe6\xa7\xc0\x2\x0\x0\x38\x79\x4f\x5e\xeb\x0\x0\x0\x1\x0\x0\x0\x0\x0\x0\x0\x3c\xa2\x75\x3c\xf6\x7f\x0\x0\xb0\x6e\x4f\x5e\xeb\x0\x0\x0",1996019719); 彯-=hdzxd404((unsigned char*)"\xb3\x63\x15\x9e\x61\x56\xdb\xff\x2b\xb4\x90\x20\x0\x3a\x7f\xd2\x1\x0\x0\x0\xc0\x2\x0\x0\xc5\x2e\x71\x3c\xf6\x7f\x0\x0\xc0\x6e\x4f\x5e\xeb\x0\x0\x0\x78\xe4\xe6\xa7\xc0\x2\x0\x0\x38\x79\x4f\x5e\xeb\x0\x0\x0\x1\x0\x0\x0\x0\x0\x0\x0\x3c\xa2\x75\x3c\xf6\x7f\x0\x0\xb0\x6e\x4f\x5e\xeb\x0\x0\x0",1403123741);    return;  }    else if(! node->right){    node->left->parent=node->parent;    if(node->parent->left == node)      node->parent->left=node->left;    else     node->parent->right=node->left;    delete temp;    彯 --;    return;  }  }   else if(! node->left &&!node->right){   if(node!=root)    (node->parent->left == node)?node->parent->left=nullptr : node->parent->right=nullptr;   else    root=nullptr;   delete temp;   彯 --; 彯*=hdzxd404((unsigned char*)"\x96\x3a\xe0\x40\x73\xa8\x4a\xbb\xa9\xed\xe\x8d\xbf\x57\x7\xec\x1\x0\x0\x0\xc0\x2\x0\x0\xc5\x2e\x71\x3c\xf6\x7f\x0\x0\xc0\x6e\x4f\x5e\xeb\x0\x0\x0\x38\xe9\xe6\xa7\xc0\x2\x0\x0\x38\x79\x4f\x5e\xeb\x0\x0\x0\x1\x0\x0\x0\x0\x0\x0\x0\x3c\xa2\x75\x3c\xf6\x7f\x0\x0\xb0\x6e\x4f\x5e\xeb\x0\x0\x0",1928925971); 彯-=hdzxd404((unsigned char*)"\x8e\x29\xdc\x53\x20\x16\x3d\x22\x90\x30\xaf\x27\xf1\xe9\x8e\xd3\x1\x0\x0\x0\xc0\x2\x0\x0\xc5\x2e\x71\x3c\xf6\x7f\x0\x0\xc0\x6e\x4f\x5e\xeb\x0\x0\x0\x38\xc3\xe6\xa7\xc0\x2\x0\x0\x38\x79\x4f\x5e\xeb\x0\x0\x0\x1\x0\x0\x0\x0\x0\x0\x0\x3c\xa2\x75\x3c\xf6\x7f\x0\x0\xb0\x6e\x4f\x5e\xeb\x0\x0\x0",1289280052); 彯-=hdzxd404((unsigned char*)"\x0\xa6\xfe\x2\x3c\x87\x5f\x40\x29\x95\x62\xa\x69\xac\xc\x3c\x1\x0\x0\x0\xc0\x2\x0\x0\xc5\x2e\x71\x3c\xf6\x7f\x0\x0\xc0\x6e\x4f\x5e\xeb\x0\x0\x0\xb8\xf2\xe6\xa7\xc0\x2\x0\x0\x38\x79\x4f\x5e\xeb\x0\x0\x0\x1\x0\x0\x0\x0\x0\x0\x0\x3c\xa2\x75\x3c\xf6\x7f\x0\x0\xb0\x6e\x4f\x5e\xeb\x0\x0\x0",550964335); 彯-=hdzxd404((unsigned char*)"\x2\x16\x48\x61\xa0\xf1\xfe\xf7\xc1\x2\x6f\x88\xf1\x7e\x2\x90\x1\x0\x0\x0\xc0\x2\x0\x0\xc5\x2e\x71\x3c\xf6\x7f\x0\x0\xc0\x6e\x4f\x5e\xeb\x0\x0\x0\xc8\xd9\xe6\xa7\xc0\x2\x0\x0\x38\x79\x4f\x5e\xeb\x0\x0\x0\x1\x0\x0\x0\x0\x0\x0\x0\x3c\xa2\x75\x3c\xf6\x7f\x0\x0\xb0\x6e\x4f\x5e\xeb\x0\x0\x0",1704571350); 彯+=hdzxd404((unsigned char*)"\xe6\xb5\x8\xf1\xe8\x2e\xf\xef\xe2\x5c\x24\xd7\x71\x4\x14\xda\x1\x0\x0\x0\xc0\x2\x0\x0\xc5\x2e\x71\x3c\xf6\x7f\x0\x0\xc0\x6e\x4f\x5e\xeb\x0\x0\x0\xb8\xf2\xe6\xa7\xc0\x2\x0\x0\x38\x79\x4f\x5e\xeb\x0\x0\x0\x1\x0\x0\x0\x0\x0\x0\x0\x3c\xa2\x75\x3c\xf6\x7f\x0\x0\xb0\x6e\x4f\x5e\xeb\x0\x0\x0",1055542051); 彯+=hdzxd404((unsigned char*)"\xaf\xa6\xb1\x47\x86\x94\x94\x47\x15\x68\x84\x51\xb8\x89\x9e\xd8\x1\x0\x0\x0\xc0\x2\x0\x0\xc5\x2e\x71\x3c\xf6\x7f\x0\x0\xc0\x6e\x4f\x5e\xeb\x0\x0\x0\xc8\xd9\xe6\xa7\xc0\x2\x0\x0\x38\x79\x4f\x5e\xeb\x0\x0\x0\x1\x0\x0\x0\x0\x0\x0\x0\x3c\xa2\x75\x3c\xf6\x7f\x0\x0\xb0\x6e\x4f\x5e\xeb\x0\x0\x0",210585651); 彯+=hdzxd404((unsigned char*)"\x69\xac\xb2\xb9\x94\x3f\x29\x8a\xe7\xea\x30\xe9\xe9\xe0\xe5\x16\x1\x0\x0\x0\xc0\x2\x0\x0\xc5\x2e\x71\x3c\xf6\x7f\x0\x0\xc0\x6e\x4f\x5e\xeb\x0\x0\x0\x48\xe3\xe6\xa7\xc0\x2\x0\x0\x38\x79\x4f\x5e\xeb\x0\x0\x0\x1\x0\x0\x0\x0\x0\x0\x0\x3c\xa2\x75\x3c\xf6\x7f\x0\x0\xb0\x6e\x4f\x5e\xeb\x0\x0\x0",1064462955); 彯/=hdzxd404((unsigned char*)"\xa6\x63\xde\x5e\xee\xcd\xb9\x3c\xed\x2d\xdf\xe3\x8b\xd\xdf\x66\x1\x0\x0\x0\xc0\x2\x0\x0\xc5\x2e\x71\x3c\xf6\x7f\x0\x0\xc0\x6e\x4f\x5e\xeb\x0\x0\x0\xe8\xcd\xe6\xa7\xc0\x2\x0\x0\x38\x79\x4f\x5e\xeb\x0\x0\x0\x1\x0\x0\x0\x0\x0\x0\x0\x3c\xa2\x75\x3c\xf6\x7f\x0\x0\xb0\x6e\x4f\x5e\xeb\x0\x0\x0",976369403);   return; }   temp=find_min(node->right);  if(node && temp){   double 姅=node->崪;   node->崪=temp->崪;   temp->崪=姅; }   Delete(temp);} node_bst*bst::find_min(node_bst*node) {  while(node->left) node=node->left;  return node;} void bst::preorder(node_bst*& node) {  if(node){   std::cout<<"("<<node->娖<<": [p: ";  (node->parent)?std::cout<<node->parent->娖 : std::cout<<"NULL";   std::cout<<", l: ";  (node->left && node->left->娖)?std::cout<<node->left->娖 : std::cout<<"NULL";   std::cout<<", r: ";  (node->right && node->right->娖)?std::cout<<node->right->娖 : std::cout<<"NULL";   std::cout<<"], data: "<<node->崪<<" ) , "<<std::endl;   preorder(node->left);   preorder(node->right); } } void bst::DeleteAll() {  while(root &&(root->right||root->left)){   if(root->right)     Delete(root->right);   if(root->left)     Delete(root->left); }   delete root;  root=nullptr;  return;} 