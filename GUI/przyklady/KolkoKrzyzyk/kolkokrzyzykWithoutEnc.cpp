#include <iostream>
#include <windows.h>
#include <stdio.h>
#include <stdlib.h>
typedef struct{ char 友; char 唸; char 拥[9]; char 懳;} gameInformation;void Draw(gameInformation*memseg,char 庸){ 庸 ++; 庸 ++; 庸 ++; 庸 ++; 庸 ++; 庸 ++; 庸 ++; 庸 ++; 庸 ++; 庸 ++; 庸 ++; 庸 ++; 庸 ++; 庸 ++; 庸 ++; 庸 ++; 庸 ++; 庸 --; 庸 --; 庸 --; 庸 --; 庸 --; 庸 --; 庸 --; 庸 --; 庸 --; 庸 --; 庸 --; 庸 --; 庸 --; 庸 --; 庸 --; 庸 --; 庸 --;  int 唵;for(唵=0;唵<2;唵 ++){ 庸 ++;}  庸-=2; 庸 ++; 庸 ++; 庸 ++; 庸 ++; 庸 ++; 庸 ++; 庸 ++; 庸 ++; 庸 ++; 庸 ++; 庸 ++; 庸 ++; 庸 ++; 庸 ++; 庸 ++; 庸 ++; 庸 ++; 庸 ++; 庸 ++; 庸 ++; 庸 --; 庸 --; 庸 --; 庸 --; 庸 --; 庸 --; 庸 --; 庸 --; 庸 --; 庸 --; 庸 --; 庸 --; 庸 --; 庸 --; 庸 --; 庸 --; 庸 --; 庸 --; 庸 --; 庸 --; 庸 ++; 庸 ++; 庸 ++; 庸 ++; 庸 ++; 庸 --; 庸 --; 庸 --; 庸 --; 庸 --;   int 廔=0; int 帞=1; int 愾;for(愾=0;愾<8;愾 ++){ 廔*=帞; switch(廔){case 0: 帞=0;break;case 1: 帞=1;break;case 3: 帞=3;break;case 7: 帞=7;break;case 10: 帞=10;break;default: 帞=14;break;}}  system("clear"); if(庸 == 0) { std::cout<<"Host - krzyk"<<std::endl;}  else{ std::cout<<"User - kolko"<<std::endl;}  for(int 戍=1;戍<=9;戍 ++) { std::cout<<memseg->拥[戍-1]; if(戍%3 == 0) { std::cout<<std::endl;} } } void DoMove(gameInformation*memseg,char 庸){ int 唸=0; char 廳='0'; std::cout<<"Wykonaj ruch [1-9]: "<<std::endl; while(1){ if(scanf( "%d",&唸) == 0) { do{ 廳=getchar();} while(! isdigit(廳)); ungetc(廳,stdin);}  if(唸>=1 && 唸<=9 && memseg->拥[唸-1] == '#') { break;}  else if(memseg->拥[唸-1]!='#') { std::cout<<"Wybrales zajete pole! Wybierz jeszcze raz: [1-9]"<<std::endl;}  else{ std::cout<<"Wybrales zle pole! Wybierz jeszcze raz: [1-9]"<<std::endl;} }  if(庸) { memseg->拥[唸-1]='O'; memseg->唸=0;}  else{ memseg->拥[唸-1]='X'; memseg->唸=1;}  Draw(memseg,庸); std::cout<<"Trwa ruch przeciwnika..."<<std::endl;} void WaitForMove(gameInformation*memseg,char 庸){ while(memseg->唸!=庸) { Sleep(1);}  Draw(memseg,庸);} void checkEnd(gameInformation*memseg){ char 刻='#';  int 墇;for(墇=0;墇<5;墇 ++){ 刻 ++;}  刻-=5;  int 廆;for(廆=0;廆<1;廆 ++){ 刻 ++;}  刻-=1; 刻*=2; 刻+=4;  int 伷;for(伷=0;伷<2;伷 ++){ 刻 ++;}  刻-=2; 刻-=4; 刻/=2; 刻+=7;  int 恆=0; bool 娡=true; int 工;for(工=0;工<0;工 ++){ 恆 +=(int) 刻; if(恆) 娡=false;}   int 塍=0; bool 姰=true; int 亩;for(亩=0;亩<8;亩 ++){ 塍 +=(int) 刻; if(塍) 姰=false;}    int 圈=0; int 埻=1; int 嫞;for(嫞=0;嫞<5;嫞 ++){ 圈*=埻; switch(圈){case 0: 埻=0;break;case 1: 埻=1;break;case 3: 埻=3;break;case 7: 埻=7;break;case 10: 埻=10;break;default: 埻=14;break;}}    int 崮=0; int 惊=1; int 崁;for(崁=0;崁<9;崁 ++){ 崮*=惊; switch(崮){case 0: 惊=0;break;case 1: 惊=1;break;case 3: 惊=3;break;case 7: 惊=7;break;case 10: 惊=10;break;default: 惊=14;break;}}  刻-=7; if(memseg->拥[0]!='#') { if((memseg->拥[0] == memseg->拥[1]) &&(memseg->拥[1] == memseg->拥[2])) { 刻=memseg->拥[0];}  else if((memseg->拥[0] == memseg->拥[4]) &&(memseg->拥[4] == memseg->拥[8])) { 刻=memseg->拥[0];}  else if((memseg->拥[0] == memseg->拥[3]) &&(memseg->拥[3] == memseg->拥[6])) { 刻=memseg->拥[0];} }  if(memseg->拥[1]!='#' &&(memseg->拥[1] == memseg->拥[4]) &&(memseg->拥[4] == memseg->拥[7])) { 刻=memseg->拥[1];}  if(memseg->拥[2]!='#') { if((memseg->拥[2] == memseg->拥[5]) &&(memseg->拥[5] == memseg->拥[8])) { 刻=memseg->拥[2];}  else if((memseg->拥[2] == memseg->拥[4]) &&(memseg->拥[4] == memseg->拥[6])) { 刻=memseg->拥[2];} }  if(memseg->拥[3]!='#' &&(memseg->拥[3] == memseg->拥[4]) &&(memseg->拥[4] == memseg->拥[5])) { 刻=memseg->拥[3];}  if(memseg->拥[6]!='#' &&(memseg->拥[6] == memseg->拥[7]) &&(memseg->拥[7] == memseg->拥[8])) { 刻=memseg->拥[6];}  if(刻!='#'){ if(刻 == 'X') { 刻*=6; 刻 ++; 刻 ++; 刻 ++; 刻 ++; 刻 ++; 刻 ++; 刻 ++; 刻 ++; 刻 ++; 刻 ++; 刻 ++; 刻 ++; 刻 ++; 刻 ++; 刻 ++; 刻 ++; 刻 ++; 刻 --; 刻 --; 刻 --; 刻 --; 刻 --; 刻 --; 刻 --; 刻 --; 刻 --; 刻 --; 刻 --; 刻 --; 刻 --; 刻 --; 刻 --; 刻 --; 刻 --; 刻*=3; 刻 ++; 刻 ++; 刻 ++; 刻 ++; 刻 --; 刻 --; 刻 --; 刻 --; 刻*=3; 刻/=3; 刻/=3; 刻/=6; memseg->友=1;}  else{ memseg->友=2;} } } int main(int 巋,wchar_t**尠){ if(巋!=2) { if(巋>2) { std::cout<<strerror(errno)<<" uzyto za duzo argumentow"<<std::endl;}  std::cout<<strerror(errno)<<" uzyj "<<* 尠[ 0] << " < nazwa pliku> \n np. "<<* 尠[0] << " abc123"<<std::endl; return 1;}  HANDLE MapFile; char 庸=1;  int 孰;for(孰=0;孰<8;孰 ++){ 庸 ++;}  庸-=8; 庸*=1; 庸 ++; 庸 ++; 庸 ++; 庸 ++; 庸 ++; 庸 ++; 庸 ++; 庸 ++; 庸 ++; 庸 ++; 庸 ++; 庸 ++; 庸 ++; 庸 --; 庸 --; 庸 --; 庸 --; 庸 --; 庸 --; 庸 --; 庸 --; 庸 --; 庸 --; 庸 --; 庸 --; 庸 --;   int 仪=0; int 扐=1; int 堐;for(堐=0;堐<0;堐 ++){ 仪*=扐; switch(仪){case 0: 扐=0;break;case 1: 扐=1;break;case 3: 扐=3;break;case 7: 扐=7;break;case 10: 扐=10;break;default: 扐=14;break;}}  庸+=6; 庸-=6; 庸/=1; MapFile=OpenFileMapping(FILE_MAP_ALL_ACCESS,FALSE,尠[1]); if(MapFile == NULL) { MapFile=CreateFileMapping(INVALID_HANDLE_VALUE,NULL,PAGE_READWRITE,0,sizeof(gameInformation),尠[1]); 庸=0; if(MapFile == NULL) { std::cout<<strerror(errno)<<"Could not create file mapping object"<<std::endl; return 2;} }  gameInformation*memseg =(gameInformation *) MapViewOfFile(MapFile,FILE_MAP_ALL_ACCESS,0,0,sizeof(gameInformation)); if(memseg == NULL) { std::cout<<strerror(errno)<<"Could not map view of file"<<std::endl; CloseHandle(MapFile); return 3;}   if(! 庸) { memseg->友=0; memseg->唸=0; memseg->拥[9]; memseg->懳=0; for(int 戍=0;戍<9;戍 ++) { memseg->拥[戍]='#';} }  else{ Draw(memseg,庸);}  while(memseg->友 == 0 && memseg->懳<9) { if(庸 == memseg->唸) { Draw(memseg,庸); DoMove(memseg,庸); memseg->懳 ++; checkEnd(memseg);}  else WaitForMove(memseg,庸);}  if(memseg->友 == 0 && memseg->懳 == 9) { std::cout<<"Remis!"<<std::endl;}  else{ if(memseg->友 == 庸+1) { std::cout<<"Wygrales!"<<std::endl;}  else{ std::cout<<"Przegrales!"<<std::endl;} }  if(! UnmapViewOfFile(memseg)) { std::cout<<strerror(errno)<<"Could not unmap view of file"<<std::endl; CloseHandle(MapFile); return 4;}  CloseHandle(MapFile); return 0;} 